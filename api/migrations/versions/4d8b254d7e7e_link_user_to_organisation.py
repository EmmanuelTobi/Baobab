"""Link user to organisation

Revision ID: 4d8b254d7e7e
Revises: 016571f41a20
Create Date: 2020-01-22 17:42:42.968199

"""

# revision identifiers, used by Alembic.
revision = '4d8b254d7e7e'
down_revision = '016571f41a20'

from alembic import op
import sqlalchemy as sa
from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy import orm

Base = declarative_base()


class AppUser(Base):
    __tablename__ = 'app_user'
    __table_args__ = {'extend_existing': True}

    id = db.Column(db.Integer(), primary_key=True)
    email = db.Column(db.String(255), unique=True, nullable=False)
    firstname = db.Column(db.String(100), nullable=False)
    lastname = db.Column(db.String(100), nullable=False)
    user_title = db.Column(db.String(20), nullable=False)
    nationality_country_id = db.Column(db.Integer(), db.ForeignKey('country.id'), nullable=False)
    residence_country_id = db.Column(db.Integer(), db.ForeignKey('country.id'), nullable=False)
    user_gender = db.Column(db.String(20), nullable=False)
    affiliation = db.Column(db.String(255), nullable=False)
    department = db.Column(db.String(255), nullable=False)
    user_disability = db.Column(db.String(255), nullable=False)
    user_category_id = db.Column(db.Integer(), db.ForeignKey('user_category.id'), nullable=False)
    user_dateOfBirth = db.Column(db.DateTime(), nullable=True)
    user_primaryLanguage = db.Column(db.String(255), nullable=True)
    password = db.Column(db.String(255), nullable=False)
    active = db.Column(db.Boolean(), nullable=False)
    is_admin = db.Column(db.Boolean(), nullable=False)
    is_deleted = db.Column(db.Boolean(), nullable=False)
    deleted_datetime_utc = db.Column(db.DateTime(), nullable=True)
    verified_email = db.Column(db.Boolean(), nullable=True)
    verify_token = db.Column(db.String(255), nullable=True, unique=True, default=make_code)

    organisation_id = db.Column(db.Integer(), db.ForeignKey('organisation.id'), nullable=False)

    nationality_country = db.relationship('Country', foreign_keys=[nationality_country_id])
    residence_country = db.relationship('Country', foreign_keys=[residence_country_id])
    user_category = db.relationship('UserCategory')
    event_roles = db.relationship('EventRole')

def upgrade():
    Base.metadata.bind = op.get_bind()
    session = orm.Session(bind=Base.metadata.bind)

    op.add_column('app_user', sa.Column('organisation_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'app_user', 'organisation', ['organisation_id'], ['id'])

    # Populate with organisation 1 and make non-nullable
    users = session.query(AppUser).all()
    for user in users:
        user.organisation_id = 1
    session.commit()
    
    op.alter_column('app_user', 'organisation_id', nullable=False)

    op.add_column('organisation', sa.Column('system_name', sa.String(length=50), nullable=False))


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('organisation', 'system_name')
    op.drop_constraint(None, 'app_user', type_='foreignkey')
    op.drop_column('app_user', 'organisation_id')
    # ### end Alembic commands ###
